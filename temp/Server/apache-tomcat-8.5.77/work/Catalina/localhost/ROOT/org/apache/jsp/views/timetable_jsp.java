/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-03-23 06:50:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class timetable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/views/../common/nav.jsp", Long.valueOf(1647857093055L));
    _jspx_dependants.put("/views/../common/footer.jsp", Long.valueOf(1647313776972L));
    _jspx_dependants.put("jar:file:/F:/SWP391/Code/CovidCare_Final/build/web/WEB-INF/lib/jstl-impl.jar!/META-INF/c.tld", Long.valueOf(1343794618000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl.jar", Long.valueOf(1647500883098L));
    _jspx_dependants.put("/views/../common/head.jsp", Long.valueOf(1647313776979L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/timetable.css\" />\r\n");
      out.write("    <link rel=\"icon\" href=\"images/icon.png\" type=\"image/icon type\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\" />\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/f0502aaa29.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("    <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!------ Include the above in your HEAD tag ---------->\r\n");
      out.write("\r\n");
      out.write("    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <body class=\"body-wrapper\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<section>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("                <nav class=\"navbar navbar-expand-lg navbar-light navigation\">\r\n");
      out.write("                    <a class=\"navbar-brand\" href=\".\">\r\n");
      out.write("                        <img src=\"images/icon.png\" alt=\"\" width=\"100\" height=\"100\">\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n");
      out.write("                            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("                        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" style=\"display: flex!important;\">\r\n");
      out.write("                        <ul class=\"navbar-nav ml-auto main-nav \">\r\n");
      out.write("                            <li class=\"nav-item active\">\r\n");
      out.write("                                <a class=\"nav-link\" href=\".\">Trang chủ</a>\r\n");
      out.write("                            </li>\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("                        <ul class=\"navbar-nav ml-auto mt-10\">\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fchoose_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </nav>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("        <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("        <script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"container theme-showcase\">\r\n");
      out.write("            <h1>Thời gian biểu hằng ngày</h1>\r\n");
      out.write("            <div id=\"holder\" class=\"row\" ></div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <script type=\"text/tmpl\" id=\"tmpl\">\r\n");
      out.write("            {{ \r\n");
      out.write("            var date = date || new Date(),\r\n");
      out.write("            month = date.getMonth(), \r\n");
      out.write("            year = date.getFullYear(), \r\n");
      out.write("            first = new Date(year, month, 1), \r\n");
      out.write("            last = new Date(year, month + 1, 0),\r\n");
      out.write("            startingDay = first.getDay(), \r\n");
      out.write("            thedate = new Date(year, month, 1 - startingDay),\r\n");
      out.write("            dayclass = lastmonthcss,\r\n");
      out.write("            today = new Date(),\r\n");
      out.write("            i, j; \r\n");
      out.write("            if (mode === 'week') {\r\n");
      out.write("            thedate = new Date(date);\r\n");
      out.write("            thedate.setDate(date.getDate() - date.getDay());\r\n");
      out.write("            first = new Date(thedate);\r\n");
      out.write("            last = new Date(thedate);\r\n");
      out.write("            last.setDate(last.getDate()+6);\r\n");
      out.write("            } else if (mode === 'day') {\r\n");
      out.write("            thedate = new Date(date);\r\n");
      out.write("            first = new Date(thedate);\r\n");
      out.write("            last = new Date(thedate);\r\n");
      out.write("            last.setDate(thedate.getDate() + 1);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            }}\r\n");
      out.write("            <table class=\"calendar-table table table-condensed table-tight\">\r\n");
      out.write("            <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <td colspan=\"7\" style=\"text-align: center\">\r\n");
      out.write("            <table style=\"white-space: nowrap; width: 100%\">\r\n");
      out.write("            <tr>\r\n");
      out.write("            <td style=\"text-align: left;\">\r\n");
      out.write("            <span class=\"btn-group\">\r\n");
      out.write("            <button class=\"js-cal-prev btn btn-default\"><</button>\r\n");
      out.write("            <button class=\"js-cal-next btn btn-default\">></button>\r\n");
      out.write("            </span>\r\n");
      out.write("            <button class=\"js-cal-option btn btn-default {{: first.toDateInt() <= today.toDateInt() && today.toDateInt() <= last.toDateInt() ? 'active':'' }}\" data-date=\"{{: today.toISOString()}}\" data-mode=\"month\">{{: todayname }}</button>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>\r\n");
      out.write("            <span class=\"btn-group btn-group-lg\">\r\n");
      out.write("            {{ if (mode !== 'day') { }}\r\n");
      out.write("            {{ if (mode === 'month') { }}<button class=\"js-cal-option btn btn-link\" data-mode=\"year\">{{: months[month] }}</button>{{ } }}\r\n");
      out.write("            {{ if (mode ==='week') { }}\r\n");
      out.write("            <button class=\"btn btn-link disabled\">{{: shortMonths[first.getMonth()] }} {{: first.getDate() }} - {{: shortMonths[last.getMonth()] }} {{: last.getDate() }}</button>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            <button class=\"js-cal-years btn btn-link\">{{: year}}</button> \r\n");
      out.write("            {{ } else { }}\r\n");
      out.write("            <button class=\"btn btn-link disabled\">{{: date.toDateString() }}</button> \r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </span>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td style=\"text-align: right\">\r\n");
      out.write("            <span class=\"btn-group\">\r\n");
      out.write("            <button class=\"js-cal-option btn btn-default {{: mode==='year'? 'active':'' }}\" data-mode=\"year\">Year</button>\r\n");
      out.write("            <button class=\"js-cal-option btn btn-default {{: mode==='month'? 'active':'' }}\" data-mode=\"month\">Month</button>\r\n");
      out.write("            <button class=\"js-cal-option btn btn-default {{: mode==='week'? 'active':'' }}\" data-mode=\"week\">Week</button>\r\n");
      out.write("            <button class=\"js-cal-option btn btn-default {{: mode==='day'? 'active':'' }}\" data-mode=\"day\">Day</button>\r\n");
      out.write("            </span>\r\n");
      out.write("            </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            {{ if (mode ==='year') {\r\n");
      out.write("            month = 0;\r\n");
      out.write("            }}\r\n");
      out.write("            <tbody>\r\n");
      out.write("            {{ for (j = 0; j < 3; j++) { }}\r\n");
      out.write("            <tr>\r\n");
      out.write("            {{ for (i = 0; i < 4; i++) { }}\r\n");
      out.write("            <td class=\"calendar-month month-{{:month}} js-cal-option\" data-date=\"{{: new Date(year, month, 1).toISOString() }}\" data-mode=\"month\">\r\n");
      out.write("            {{: months[month] }}\r\n");
      out.write("            {{ month++;}}\r\n");
      out.write("            </td>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </tr>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </tbody>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            {{ if (mode ==='month' || mode ==='week') { }}\r\n");
      out.write("            <thead>\r\n");
      out.write("            <tr class=\"c-weeks\">\r\n");
      out.write("            {{ for (i = 0; i < 7; i++) { }}\r\n");
      out.write("            <th class=\"c-name\">\r\n");
      out.write("            {{: days[i] }}\r\n");
      out.write("            </th>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            {{ for (j = 0; j < 6 && (j < 1 || mode === 'month'); j++) { }}\r\n");
      out.write("            <tr>\r\n");
      out.write("            {{ for (i = 0; i < 7; i++) { }}\r\n");
      out.write("            {{ if (thedate > last) { dayclass = nextmonthcss; } else if (thedate >= first) { dayclass = thismonthcss; } }}\r\n");
      out.write("            <td class=\"calendar-day {{: dayclass }} {{: thedate.toDateCssClass() }} {{: date.toDateCssClass() === thedate.toDateCssClass() ? 'selected':'' }} {{: daycss[i] }} js-cal-option\" data-date=\"{{: thedate.toISOString() }}\">\r\n");
      out.write("            <div class=\"date\">{{: thedate.getDate() }}</div>\r\n");
      out.write("            {{ thedate.setDate(thedate.getDate() + 1);}}\r\n");
      out.write("            </td>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </tr>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </tbody>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            {{ if (mode ==='day') { }}\r\n");
      out.write("            <tbody>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <td colspan=\"7\">\r\n");
      out.write("            <table class=\"table table-striped table-condensed table-tight-vert\" >\r\n");
      out.write("            <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th> </th>\r\n");
      out.write("            <th style=\"text-align: center; width: 100%\">{{: days[date.getDay()] }}</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th class=\"timetitle\" >All Day</th>\r\n");
      out.write("            <td class=\"{{: date.toDateCssClass() }}\">  </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th class=\"timetitle\" >Before 6 AM</th>\r\n");
      out.write("            <td class=\"time-0-0\"> </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            {{for (i = 6; i < 22; i++) { }}\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th class=\"timetitle\" >{{: i <= 12 ? i : i - 12 }} {{: i < 12 ? \"AM\" : \"PM\"}}</th>\r\n");
      out.write("            <td class=\"time-{{: i}}-0\"> </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th class=\"timetitle\" >{{: i <= 12 ? i : i - 12 }}:30 {{: i < 12 ? \"AM\" : \"PM\"}}</th>\r\n");
      out.write("            <td class=\"time-{{: i}}-30\"> </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            <tr>\r\n");
      out.write("            <th class=\"timetitle\" >After 10 PM</th>\r\n");
      out.write("            <td class=\"time-22-0\"> </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("            </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("            {{ } }}\r\n");
      out.write("            </table>\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\"></script>\r\n");
      out.write("        <script>\r\n");
      out.write("var $currentPopover = null;\r\n");
      out.write("$(document).on('shown.bs.popover', function (ev) {\r\n");
      out.write("    var $target = $(ev.target);\r\n");
      out.write("    if ($currentPopover && ($currentPopover.get(0) !== $target.get(0))) {\r\n");
      out.write("        $currentPopover.popover('toggle');\r\n");
      out.write("    }\r\n");
      out.write("    $currentPopover = $target;\r\n");
      out.write("}).on('hidden.bs.popover', function (ev) {\r\n");
      out.write("    var $target = $(ev.target);\r\n");
      out.write("    if ($currentPopover && ($currentPopover.get(0) === $target.get(0))) {\r\n");
      out.write("        $currentPopover = null;\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//quicktmpl is a simple template language I threw together a while ago; it is not remotely secure to xss and probably has plenty of bugs that I haven't considered, but it basically works\r\n");
      out.write("//the design is a function I read in a blog post by John Resig (http://ejohn.org/blog/javascript-micro-templating/) and it is intended to be loosely translateable to a more comprehensive template language like mustache easily\r\n");
      out.write("$.extend({\r\n");
      out.write("    quicktmpl: function (template) {\r\n");
      out.write("        return new Function(\"obj\", \"var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('\" + template.replace(/[\\r\\t\\n]/g, \" \").split(\"{{\").join(\"\\t\").replace(/((^|\\}\\})[^\\t]*)'/g, \"$1\\r\").replace(/\\t:(.*?)\\}\\}/g, \"',$1,'\").split(\"\\t\").join(\"');\").split(\"}}\").join(\"p.push('\").split(\"\\r\").join(\"\\\\'\") + \"');}return p.join('');\");\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$.extend(Date.prototype, {\r\n");
      out.write("    //provides a string that is _year_month_day, intended to be widely usable as a css class\r\n");
      out.write("    toDateCssClass: function () {\r\n");
      out.write("        return '_' + this.getFullYear() + '_' + (this.getMonth() + 1) + '_' + this.getDate();\r\n");
      out.write("    },\r\n");
      out.write("    //this generates a number useful for comparing two dates; \r\n");
      out.write("    toDateInt: function () {\r\n");
      out.write("        return ((this.getFullYear() * 12) + this.getMonth()) * 32 + this.getDate();\r\n");
      out.write("    },\r\n");
      out.write("    toTimeString: function () {\r\n");
      out.write("        var hours = this.getHours(),\r\n");
      out.write("                minutes = this.getMinutes(),\r\n");
      out.write("                hour = (hours > 12) ? (hours - 12) : hours,\r\n");
      out.write("                ampm = (hours >= 12) ? ' pm' : ' am';\r\n");
      out.write("        if (hours === 0 && minutes === 0) {\r\n");
      out.write("            return '';\r\n");
      out.write("        }\r\n");
      out.write("        if (minutes > 0) {\r\n");
      out.write("            return hour + ':' + minutes + ampm;\r\n");
      out.write("        }\r\n");
      out.write("        return hour + ampm;\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("(function ($) {\r\n");
      out.write("    //t here is a function which gets passed an options object and returns a string of html. I am using quicktmpl to create it based on the template located over in the html block\r\n");
      out.write("    var t = $.quicktmpl($('#tmpl').get(0).innerHTML);\r\n");
      out.write("\r\n");
      out.write("    function calendar($el, options) {\r\n");
      out.write("        //actions aren't currently in the template, but could be added easily...\r\n");
      out.write("        $el.on('click', '.js-cal-prev', function () {\r\n");
      out.write("            switch (options.mode) {\r\n");
      out.write("                case 'year':\r\n");
      out.write("                    options.date.setFullYear(options.date.getFullYear() - 1);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'month':\r\n");
      out.write("                    options.date.setMonth(options.date.getMonth() - 1);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'week':\r\n");
      out.write("                    options.date.setDate(options.date.getDate() - 7);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'day':\r\n");
      out.write("                    options.date.setDate(options.date.getDate() - 1);\r\n");
      out.write("                    break;\r\n");
      out.write("            }\r\n");
      out.write("            draw();\r\n");
      out.write("        }).on('click', '.js-cal-next', function () {\r\n");
      out.write("            switch (options.mode) {\r\n");
      out.write("                case 'year':\r\n");
      out.write("                    options.date.setFullYear(options.date.getFullYear() + 1);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'month':\r\n");
      out.write("                    options.date.setMonth(options.date.getMonth() + 1);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'week':\r\n");
      out.write("                    options.date.setDate(options.date.getDate() + 7);\r\n");
      out.write("                    break;\r\n");
      out.write("                case 'day':\r\n");
      out.write("                    options.date.setDate(options.date.getDate() + 1);\r\n");
      out.write("                    break;\r\n");
      out.write("            }\r\n");
      out.write("            draw();\r\n");
      out.write("        }).on('click', '.js-cal-option', function () {\r\n");
      out.write("            var $t = $(this), o = $t.data();\r\n");
      out.write("            if (o.date) {\r\n");
      out.write("                o.date = new Date(o.date);\r\n");
      out.write("            }\r\n");
      out.write("            $.extend(options, o);\r\n");
      out.write("            draw();\r\n");
      out.write("        }).on('click', '.js-cal-years', function () {\r\n");
      out.write("            var $t = $(this),\r\n");
      out.write("                    haspop = $t.data('popover'),\r\n");
      out.write("                    s = '',\r\n");
      out.write("                    y = options.date.getFullYear() - 2,\r\n");
      out.write("                    l = y + 5;\r\n");
      out.write("            if (haspop) {\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("            for (; y < l; y++) {\r\n");
      out.write("                s += '<button type=\"button\" class=\"btn btn-default btn-lg btn-block js-cal-option\" data-date=\"' + (new Date(y, 1, 1)).toISOString() + '\" data-mode=\"year\">' + y + '</button>';\r\n");
      out.write("            }\r\n");
      out.write("            $t.popover({content: s, html: true, placement: 'auto top'}).popover('toggle');\r\n");
      out.write("            return false;\r\n");
      out.write("        }).on('click', '.event', function () {\r\n");
      out.write("            var $t = $(this),\r\n");
      out.write("                    index = +($t.attr('data-index')),\r\n");
      out.write("                    haspop = $t.data('popover'),\r\n");
      out.write("                    data, time;\r\n");
      out.write("\r\n");
      out.write("            if (haspop || isNaN(index)) {\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("            data = options.data[index];\r\n");
      out.write("            time = convertDate(data.start).toTimeString();\r\n");
      out.write("            if (time && data.end){\r\n");
      out.write("                time = time + ' - ' + convertDate(data.end).toTimeString();\r\n");
      out.write("            }\r\n");
      out.write("            $t.data('popover', true);\r\n");
      out.write("            $t.popover({content: '<p><strong>' + time + '</strong></p>' + data.text, html: true, placement: 'auto left'}).popover('toggle');\r\n");
      out.write("            return false;\r\n");
      out.write("        });\r\n");
      out.write("        function dayAddEvent(index, event) {\r\n");
      out.write("            if (!!event.allDay) {\r\n");
      out.write("                monthAddEvent(index, event);\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            var $event = $('<div/>', {'class': 'event', text: event.title + ' - ' + event.text, title: event.title, 'data-index': index}),\r\n");
      out.write("                    start = convertDate(event.start),\r\n");
      out.write("                    end = convertDate(event.end) || convertDate(start),\r\n");
      out.write("                    time = convertDate(event.start).toTimeString(),\r\n");
      out.write("                    hour = start.getHours(),\r\n");
      out.write("                    timeclass = '.time-22-0',\r\n");
      out.write("                    startint = start.toDateInt(),\r\n");
      out.write("                    dateint = options.date.toDateInt(),\r\n");
      out.write("                    endint = end.toDateInt();\r\n");
      out.write("            console.log(convertDate(event.start));\r\n");
      out.write("            if (startint > dateint || endint < dateint) {\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (!!time) {\r\n");
      out.write("                $event.html('<strong>' + time + '</strong> ' + $event.html());\r\n");
      out.write("            }\r\n");
      out.write("            $event.toggleClass('begin', startint === dateint);\r\n");
      out.write("            $event.toggleClass('end', endint === dateint);\r\n");
      out.write("            if (hour < 6) {\r\n");
      out.write("                timeclass = '.time-0-0';\r\n");
      out.write("            }\r\n");
      out.write("            if (hour < 22) {\r\n");
      out.write("                timeclass = '.time-' + hour + '-' + (start.getMinutes() < 30 ? '0' : '30');\r\n");
      out.write("            }\r\n");
      out.write("            $(timeclass).append($event);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function monthAddEvent(index, event) {\r\n");
      out.write("            var $event = $('<div/>', {'class': 'event', text: event.title, title: event.title, 'data-index': index}),\r\n");
      out.write("                    e = new Date(event.start),\r\n");
      out.write("                    dateclass = e.toDateCssClass(),\r\n");
      out.write("                    day = $('.' + e.toDateCssClass()),\r\n");
      out.write("                    empty = $('<div/>', {'class': 'clear event', html: ' '}),\r\n");
      out.write("                    numbevents = 0,\r\n");
      out.write("                    time = convertDate(event.start).toTimeString(),\r\n");
      out.write("                    endday = convertDate(event.end) && $('.' + convertDate(event.end).toDateCssClass()).length > 0,\r\n");
      out.write("                    checkanyway = new Date(e.getFullYear(), e.getMonth(), e.getDate() + 40),\r\n");
      out.write("                    existing,\r\n");
      out.write("                    i;\r\n");
      out.write("            $event.toggleClass('all-day', !!event.allDay);\r\n");
      out.write("            if (!!time) {\r\n");
      out.write("                $event.html('<strong>' + time + '</strong> ' + $event.html());\r\n");
      out.write("            }\r\n");
      out.write("            if (!event.end) {\r\n");
      out.write("                $event.addClass('begin end');\r\n");
      out.write("                $('.' + convertDate(event.start).toDateCssClass()).append($event);\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            while (e <= convertDate(event.end) && (day.length || endday || options.date < checkanyway)) {\r\n");
      out.write("                if (day.length) {\r\n");
      out.write("                    existing = day.find('.event').length;\r\n");
      out.write("                    numbevents = Math.max(numbevents, existing);\r\n");
      out.write("                    for (i = 0; i < numbevents - existing; i++) {\r\n");
      out.write("                        day.append(empty.clone());\r\n");
      out.write("                    }\r\n");
      out.write("                    day.append(\r\n");
      out.write("                            $event.\r\n");
      out.write("                            toggleClass('begin', dateclass === convertDate(event.start).toDateCssClass()).\r\n");
      out.write("                            toggleClass('end', dateclass === convertDate(event.end).toDateCssClass())\r\n");
      out.write("                            );\r\n");
      out.write("                    $event = $event.clone();\r\n");
      out.write("                    $event.html(' ');\r\n");
      out.write("                }\r\n");
      out.write("                e.setDate(e.getDate() + 1);\r\n");
      out.write("                dateclass = e.toDateCssClass();\r\n");
      out.write("                day = $('.' + dateclass);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function yearAddEvents(events, year) {\r\n");
      out.write("            var counts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n");
      out.write("            $.each(events, function (i, v) {\r\n");
      out.write("                if (convertDate(v.start).getFullYear() === year) {\r\n");
      out.write("                    counts[convertDate(v.start).getMonth()]++;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            $.each(counts, function (i, v) {\r\n");
      out.write("                if (v !== 0) {\r\n");
      out.write("                    $('.month-' + i).append('<span class=\"badge\">' + v + '</span>');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function draw() {\r\n");
      out.write("            $el.html(t(options));\r\n");
      out.write("            //potential optimization (untested), this object could be keyed into a dictionary on the dateclass string; the object would need to be reset and the first entry would have to be made here\r\n");
      out.write("            $('.' + (new Date()).toDateCssClass()).addClass('today');\r\n");
      out.write("            if (options.data && options.data.length) {\r\n");
      out.write("                if (options.mode === 'year') {\r\n");
      out.write("                    yearAddEvents(options.data, options.date.getFullYear());\r\n");
      out.write("                } else if (options.mode === 'month' || options.mode === 'week') {\r\n");
      out.write("                    $.each(options.data, monthAddEvent);\r\n");
      out.write("                } else {\r\n");
      out.write("                    $.each(options.data, dayAddEvent);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        draw();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    ;\r\n");
      out.write("    (function (defaults, $, window, document) {\r\n");
      out.write("        $.extend({\r\n");
      out.write("            calendar: function (options) {\r\n");
      out.write("                return $.extend(defaults, options);\r\n");
      out.write("            }\r\n");
      out.write("        }).fn.extend({\r\n");
      out.write("            calendar: function (options) {\r\n");
      out.write("                options = $.extend({}, defaults, options);\r\n");
      out.write("                return $(this).each(function () {\r\n");
      out.write("                    var $this = $(this);\r\n");
      out.write("                    calendar($this, options);\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    })({\r\n");
      out.write("        days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n");
      out.write("        months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"Jule\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n");
      out.write("        shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n");
      out.write("        date: (new Date()),\r\n");
      out.write("        daycss: [\"c-sunday\", \"\", \"\", \"\", \"\", \"\", \"c-saturday\"],\r\n");
      out.write("        todayname: \"Today\",\r\n");
      out.write("        thismonthcss: \"current\",\r\n");
      out.write("        lastmonthcss: \"outside\",\r\n");
      out.write("        nextmonthcss: \"outside\",\r\n");
      out.write("        mode: \"month\",\r\n");
      out.write("        data: []\r\n");
      out.write("    }, jQuery, window, document);\r\n");
      out.write("\r\n");
      out.write("})(jQuery);\r\n");
      out.write("\r\n");
      out.write("var data;\r\n");
      out.write("data = $.ajax({\r\n");
      out.write("    url: \"events\",\r\n");
      out.write("    method: \"GET\",\r\n");
      out.write("    dataType: 'json',\r\n");
      out.write("    async: false,\r\n");
      out.write("    cache: false\r\n");
      out.write("}).responseJSON;\r\n");
      out.write("\r\n");
      out.write("console.log(data);\r\n");
      out.write("\r\n");
      out.write("//data must be sorted by start date\r\n");
      out.write("data.sort(function (a, b) {\r\n");
      out.write("    return (+a.start) - (+b.start);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//Actually do everything\r\n");
      out.write("$('#holder').calendar({\r\n");
      out.write("    data: data\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function convertDate(date) {\r\n");
      out.write("    return (new Date(date));\r\n");
      out.write("}\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--Footer-->\r\n");
      out.write("<footer class=\"footer section section-sm\">\r\n");
      out.write("    <!-- Container Start -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-lg-4 col-md-7 offset-md-1 offset-lg-0\">\r\n");
      out.write("                <!-- About -->\r\n");
      out.write("                <div class=\"block about\">\r\n");
      out.write("                    <!-- footer logo -->\r\n");
      out.write("                    <img src=\"images/footer.png\" alt=\"\" width=\"250\">\r\n");
      out.write("                    <!-- description -->\r\n");
      out.write("                    <p class=\"alt-color\">Cuộc sống bận rộn có thể khiến bạn quên đi sức khỏe bản thân,\r\n");
      out.write("                        đặc biệt là mùa covid. Nhưng đến khi bị bệnh, nhiều người lại không muốn đến bệnh viện\r\n");
      out.write("                        vì quá đông và nguy cơ lây nhiễm cao.\r\n");
      out.write("                        Hiểu được điều đó, COVID CARE có thể giúp bạn dễ dàng kết nối với\r\n");
      out.write("                        bác sĩ và tư vấn cũng như hướng dẫn trực tuyến tại nhà.</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- Link list -->\r\n");
      out.write("            <div class=\"col-lg-6 offset-lg-1 col-md-3\" style=\"text-align: right;\">\r\n");
      out.write("                <div class=\"block\">\r\n");
      out.write("                    <h4>Mọi đóng góp ý kiến xin liên hệ</h4>\r\n");
      out.write("                    <ul>\r\n");
      out.write("                        <li><a href=\"#\">Đường dây nóng: 0123456789</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Email: group8@gmail.com</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Website: Covid Care</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Facebook: group8/facebook.com</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Container End -->\r\n");
      out.write("</footer>\r\n");
      out.write("<!-- Footer Bottom -->\r\n");
      out.write("<footer class=\"footer-bottom\">\r\n");
      out.write("    <!-- Container Start -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <!-- Copyright -->\r\n");
      out.write("                <div class=\"copyright\">\r\n");
      out.write("                    <p style=\"text-align: center;\">Copyright © 2022</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /views/../common/nav.jsp(28,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getUserType() == 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    <li class=\"nav-item active\">\r\n");
          out.write("                                        <a class=\"nav-link\" href=\"management\">Quản lý</a>\r\n");
          out.write("                                    </li>\r\n");
          out.write("                                    <li class=\"nav-item active\">\r\n");
          out.write("                                        <a class=\"nav-link\" href=\"statistic\">Thống kê</a>\r\n");
          out.write("                                    </li>\r\n");
          out.write("                                    <li class=\"nav-item active\">\r\n");
          out.write("                                        <a class=\"nav-link\" href=\"news\">Tạo bản tin mới</a>\r\n");
          out.write("                                    </li>\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    ");
          if (_jspx_meth_c_005fchoose_005f1(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                        ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                        ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /views/../common/nav.jsp(41,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getUserType() == 2}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"timetable\">Lịch trình</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"\">Quản lý bệnh nhân</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"chat\">Hỗ Trợ Trực Tuyến</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"news\">Tin tức</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"tutorial\">Hướng dẫn</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                            <li class=\"nav-item active\">\r\n");
          out.write("                                                <a class=\"nav-link\" href=\"timetable\">Thời gian biểu</a>\r\n");
          out.write("                                            </li>\r\n");
          out.write("                                            ");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fotherwise_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f1);
      // /views/../common/nav.jsp(62,44) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getUserType() == 3}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                                <li class=\"nav-item active\">\r\n");
          out.write("                                                    <a class=\"nav-link\" href=\"info\">Thông tin cá nhân</a>\r\n");
          out.write("                                                </li>\r\n");
          out.write("                                            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f2 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f2_reused = false;
    try {
      _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f2.setParent(null);
      int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
      if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                ");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                ");
          if (_jspx_meth_c_005fotherwise_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f2);
      _jspx_th_c_005fchoose_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      // /views/../common/nav.jsp(74,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    <li class=\"nav-item\">                                   \r\n");
          out.write("                                        <a class=\"nav-link login-button\" href=\"login\">Đăng Nhập</a> \r\n");
          out.write("                                    </li>\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f2_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    <li class=\"nav-item\">\r\n");
          out.write("                                        <a class=\"nav-link login-button\" href=\"logout\">Đăng Xuất</a> \r\n");
          out.write("                                    </li>\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f2);
      _jspx_th_c_005fotherwise_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f2_reused);
    }
    return false;
  }
}
